#!/bin/bash

# =============================================================================
# Script para crear las √∫ltimas 12 historias de usuario (HU-021 a HU-032)
# =============================================================================

REPO_OWNER="agustinabusto"
REPO_NAME="mcp-poc"

# Colores
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

echo -e "${BLUE}üìñ Creando las √∫ltimas 12 historias de usuario...${NC}"

# =============================================================================
# FUNCI√ìN PARA OBTENER N√öMERO DE MILESTONE
# =============================================================================

get_milestone_number() {
    local milestone_title=$1
    local milestone_number
    
    milestone_number=$(gh api repos/"$REPO_OWNER"/"$REPO_NAME"/milestones 2>/dev/null | \
        grep -B2 "\"title\": \"$milestone_title\"" | \
        grep -oP '"number": \K\d+' | head -1)
    
    echo "$milestone_number"
}

# =============================================================================
# FUNCI√ìN PARA CREAR ISSUES CON MILESTONE
# =============================================================================

create_issue_with_milestone() {
    local title=$1
    local body=$2
    local labels=$3
    local milestone_title=$4
    
    echo -e "${BLUE}üìù Creando: $title${NC}"
    
    local milestone_number
    milestone_number=$(get_milestone_number "$milestone_title")
    
    if [[ -n "$milestone_number" ]]; then
        if gh api repos/"$REPO_OWNER"/"$REPO_NAME"/issues \
            --method POST \
            --field title="$title" \
            --field body="$body" \
            --field labels="$labels" \
            --field milestone="$milestone_number" \
            --silent 2>/dev/null; then
            echo -e "${GREEN}‚úÖ Issue creado con milestone${NC}"
        else
            echo -e "${YELLOW}‚ö†Ô∏è Error con API, creando sin milestone...${NC}"
            gh issue create --repo "$REPO_OWNER/$REPO_NAME" \
                --title "$title" \
                --body "$body" \
                --label "$labels" 2>/dev/null
        fi
    else
        echo -e "${YELLOW}‚ö†Ô∏è Milestone no encontrado${NC}"
    fi
}

# =============================================================================
# M√ìDULO CONFIGURACI√ìN Y ADMINISTRACI√ìN
# =============================================================================

echo -e "${YELLOW}‚öôÔ∏è Creando m√≥dulo Configuraci√≥n y Administraci√≥n...${NC}"

# HU-021: Configuraci√≥n de Monitoreo
create_issue_with_milestone "HU-021: Configuraci√≥n de Monitoreo" \
"## Historia de Usuario
**Como** administrador del sistema
**Quiero** configurar el monitoreo autom√°tico para m√∫ltiples CUITs
**Para** establecer horarios y frecuencias de verificaci√≥n

## Criterios de Aceptaci√≥n
- [ ] CA-001: Configurar monitoreo por CUIT individual
- [ ] CA-002: Establecer horarios y frecuencias personalizadas
- [ ] CA-003: Gestionar m√∫ltiples CUITs simult√°neamente
- [ ] CA-004: Configurar tipos de verificaciones activas

## Informaci√≥n Adicional
- **M√≥dulo:** Configuraci√≥n y Admin
- **Prioridad:** Alta
- **Estimaci√≥n:** 8 puntos de historia
- **Sprint:** Sprint 6" \
"user-story,admin,priority-high" \
"Milestone 6: Configuraci√≥n y APIs"

# HU-022: Gesti√≥n de Usuarios
create_issue_with_milestone "HU-022: Gesti√≥n de Usuarios" \
"## Historia de Usuario
**Como** administrador del sistema
**Quiero** gestionar usuarios y sus permisos
**Para** controlar el acceso al sistema seg√∫n roles

## Criterios de Aceptaci√≥n
- [ ] CA-001: Crear, editar y eliminar usuarios
- [ ] CA-002: Asignar roles y permisos granulares
- [ ] CA-003: Gestionar acceso por empresa/organizaci√≥n
- [ ] CA-004: Auditor√≠a de accesos y acciones

## Informaci√≥n Adicional
- **M√≥dulo:** Configuraci√≥n y Admin
- **Prioridad:** Media
- **Estimaci√≥n:** 8 puntos de historia
- **Sprint:** Sprint 6" \
"user-story,admin,priority-medium" \
"Milestone 6: Configuraci√≥n y APIs"

# HU-023: Configuraci√≥n de Reglas de Compliance
create_issue_with_milestone "HU-023: Configuraci√≥n de Reglas de Compliance" \
"## Historia de Usuario
**Como** administrador del sistema
**Quiero** personalizar las reglas de compliance
**Para** adaptar el sistema a requisitos espec√≠ficos

## Criterios de Aceptaci√≥n
- [ ] CA-001: Configurar reglas personalizadas de compliance
- [ ] CA-002: Establecer pesos y ponderaciones
- [ ] CA-003: Definir umbrales de alertas
- [ ] CA-004: Validar y probar reglas antes de aplicar

## Informaci√≥n Adicional
- **M√≥dulo:** Configuraci√≥n y Admin
- **Prioridad:** Media
- **Estimaci√≥n:** 5 puntos de historia
- **Sprint:** Sprint 6" \
"user-story,admin,priority-medium" \
"Milestone 6: Configuraci√≥n y APIs"

# HU-024: Logs y Auditor√≠a
create_issue_with_milestone "HU-024: Logs y Auditor√≠a" \
"## Historia de Usuario
**Como** administrador del sistema
**Quiero** acceder a logs detallados y funciones de auditor√≠a
**Para** rastrear actividades y resolver problemas

## Criterios de Aceptaci√≥n
- [ ] CA-001: Logs detallados de todas las operaciones
- [ ] CA-002: Interfaz de b√∫squeda y filtrado de logs
- [ ] CA-003: Auditor√≠a de acciones cr√≠ticas
- [ ] CA-004: Exportaci√≥n de logs para an√°lisis

## Informaci√≥n Adicional
- **M√≥dulo:** Configuraci√≥n y Admin
- **Prioridad:** Media
- **Estimaci√≥n:** 5 puntos de historia
- **Sprint:** Sprint 6" \
"user-story,admin,priority-medium" \
"Milestone 6: Configuraci√≥n y APIs"

# =============================================================================
# M√ìDULO INTEGRACI√ìN Y APIs
# =============================================================================

echo -e "${YELLOW}üîå Creando m√≥dulo Integraci√≥n y APIs...${NC}"

# HU-025: API REST
create_issue_with_milestone "HU-025: API REST" \
"## Historia de Usuario
**Como** desarrollador externo
**Quiero** acceder a las funcionalidades del sistema v√≠a API REST
**Para** integrar con otros sistemas y aplicaciones

## Criterios de Aceptaci√≥n
- [ ] CA-001: API REST completa con todos los endpoints
- [ ] CA-002: Autenticaci√≥n y autorizaci√≥n robusta
- [ ] CA-003: Versionado de API para compatibilidad
- [ ] CA-004: Rate limiting y throttling

## Informaci√≥n Adicional
- **M√≥dulo:** Integraci√≥n y APIs
- **Prioridad:** Alta
- **Estimaci√≥n:** 8 puntos de historia
- **Sprint:** Sprint 6" \
"user-story,api,priority-high" \
"Milestone 6: Configuraci√≥n y APIs"

# HU-026: Webhooks
create_issue_with_milestone "HU-026: Webhooks" \
"## Historia de Usuario
**Como** desarrollador externo
**Quiero** recibir notificaciones v√≠a webhooks
**Para** integrar eventos del sistema con aplicaciones externas

## Criterios de Aceptaci√≥n
- [ ] CA-001: Configuraci√≥n de webhooks por evento
- [ ] CA-002: Delivery confiable con reintentos
- [ ] CA-003: Verificaci√≥n de signatures
- [ ] CA-004: Dashboard de monitoreo de webhooks

## Informaci√≥n Adicional
- **M√≥dulo:** Integraci√≥n y APIs
- **Prioridad:** Media
- **Estimaci√≥n:** 5 puntos de historia
- **Sprint:** Sprint 6" \
"user-story,api,priority-medium" \
"Milestone 6: Configuraci√≥n y APIs"

# HU-027: Exportaci√≥n de Datos
create_issue_with_milestone "HU-027: Exportaci√≥n de Datos" \
"## Historia de Usuario
**Como** usuario del sistema
**Quiero** exportar datos y reportes
**Para** usar la informaci√≥n en otros sistemas o an√°lisis

## Criterios de Aceptaci√≥n
- [ ] CA-001: Exportar datos en m√∫ltiples formatos (CSV, JSON, PDF)
- [ ] CA-002: Reportes personalizables por fechas y filtros
- [ ] CA-003: Exportaci√≥n masiva de datos hist√≥ricos
- [ ] CA-004: Programaci√≥n de exportaciones autom√°ticas

## Informaci√≥n Adicional
- **M√≥dulo:** Integraci√≥n y APIs
- **Prioridad:** Media
- **Estimaci√≥n:** 5 puntos de historia
- **Sprint:** Sprint 6" \
"user-story,api,priority-medium" \
"Milestone 6: Configuraci√≥n y APIs"

# HU-028: Documentaci√≥n de API
create_issue_with_milestone "HU-028: Documentaci√≥n de API" \
"## Historia de Usuario
**Como** desarrollador externo
**Quiero** acceder a documentaci√≥n completa de la API
**Para** implementar integraciones de manera eficiente

## Criterios de Aceptaci√≥n
- [ ] CA-001: Documentaci√≥n interactiva con OpenAPI/Swagger
- [ ] CA-002: Ejemplos de c√≥digo en m√∫ltiples lenguajes
- [ ] CA-003: Gu√≠as de integraci√≥n paso a paso
- [ ] CA-004: Playground para probar endpoints

## Informaci√≥n Adicional
- **M√≥dulo:** Integraci√≥n y APIs
- **Prioridad:** Media
- **Estimaci√≥n:** 3 puntos de historia
- **Sprint:** Sprint 6" \
"user-story,api,priority-medium" \
"Milestone 6: Configuraci√≥n y APIs"

# =============================================================================
# M√ìDULO SEGURIDAD Y PERFORMANCE
# =============================================================================

echo -e "${YELLOW}üîê Creando m√≥dulo Seguridad y Performance...${NC}"

# HU-029: Autenticaci√≥n y Autorizaci√≥n
create_issue_with_milestone "HU-029: Autenticaci√≥n y Autorizaci√≥n" \
"## Historia de Usuario
**Como** administrador del sistema
**Quiero** implementar autenticaci√≥n segura y control de acceso
**Para** proteger la informaci√≥n sensible del sistema

## Criterios de Aceptaci√≥n
- [ ] CA-001: Autenticaci√≥n JWT con refresh tokens
- [ ] CA-002: Autorizaci√≥n basada en roles (RBAC)
- [ ] CA-003: Autenticaci√≥n multi-factor opcional
- [ ] CA-004: Integraci√≥n con proveedores OAuth

## Informaci√≥n Adicional
- **M√≥dulo:** Seguridad y Performance
- **Prioridad:** Alta
- **Estimaci√≥n:** 8 puntos de historia
- **Sprint:** Sprint 6" \
"user-story,security,priority-high" \
"Milestone 6: Configuraci√≥n y APIs"

# HU-030: Rate Limiting
create_issue_with_milestone "HU-030: Rate Limiting" \
"## Historia de Usuario
**Como** administrador del sistema
**Quiero** implementar limitaci√≥n de velocidad en las APIs
**Para** prevenir abuso y mantener la performance del sistema

## Criterios de Aceptaci√≥n
- [ ] CA-001: Rate limiting por usuario y por IP
- [ ] CA-002: Diferentes l√≠mites por tipo de endpoint
- [ ] CA-003: Headers informativos de l√≠mites
- [ ] CA-004: Configuraci√≥n flexible de l√≠mites

## Informaci√≥n Adicional
- **M√≥dulo:** Seguridad y Performance
- **Prioridad:** Media
- **Estimaci√≥n:** 5 puntos de historia
- **Sprint:** Sprint 6" \
"user-story,security,priority-medium" \
"Milestone 6: Configuraci√≥n y APIs"

# HU-031: Monitoreo de Performance
create_issue_with_milestone "HU-031: Monitoreo de Performance" \
"## Historia de Usuario
**Como** administrador del sistema
**Quiero** monitorear m√©tricas de performance del sistema
**Para** mantener tiempos de respuesta √≥ptimos

## Criterios de Aceptaci√≥n
- [ ] CA-001: M√©tricas de performance en tiempo real
- [ ] CA-002: Alertas por degradaci√≥n de performance
- [ ] CA-003: Dashboard de monitoreo system health
- [ ] CA-004: Reportes de performance hist√≥ricos

## Informaci√≥n Adicional
- **M√≥dulo:** Seguridad y Performance
- **Prioridad:** Media
- **Estimaci√≥n:** 5 puntos de historia
- **Sprint:** Sprint 6" \
"user-story,security,priority-medium" \
"Milestone 6: Configuraci√≥n y APIs"

# HU-032: Backup y Recuperaci√≥n
create_issue_with_milestone "HU-032: Backup y Recuperaci√≥n" \
"## Historia de Usuario
**Como** administrador del sistema
**Quiero** implementar estrategias de backup y recuperaci√≥n
**Para** proteger los datos y garantizar la continuidad del servicio

## Criterios de Aceptaci√≥n
- [ ] CA-001: Backups autom√°ticos programados
- [ ] CA-002: Backup incremental y completo
- [ ] CA-003: Procedimientos de recuperaci√≥n probados
- [ ] CA-004: Monitoreo de estado de backups

## Informaci√≥n Adicional
- **M√≥dulo:** Seguridad y Performance
- **Prioridad:** Media
- **Estimaci√≥n:** 5 puntos de historia
- **Sprint:** Sprint 6" \
"user-story,security,priority-medium" \
"Milestone 6: Configuraci√≥n y APIs"

# =============================================================================
# RESUMEN FINAL
# =============================================================================

echo -e "${GREEN}üéâ ¬°TODAS las 32 historias de usuario creadas!${NC}"
echo -e "${BLUE}üìä Resumen completo:${NC}"

echo -e "${YELLOW}üìã M√≥dulos completados:${NC}"
echo -e "   ‚Ä¢ üè¢ Monitor Autom√°tico AFIP (4 HU): HU-001 a HU-004"
echo -e "   ‚Ä¢ üö® Sistema de Alertas (4 HU): HU-005 a HU-008"
echo -e "   ‚Ä¢ ‚úÖ Compliance Checker (4 HU): HU-009 a HU-012"
echo -e "   ‚Ä¢ üìä Dashboard y UI (4 HU): HU-013 a HU-016"
echo -e "   ‚Ä¢ üîß Arquitectura MCP (4 HU): HU-017 a HU-020"
echo -e "   ‚Ä¢ ‚öôÔ∏è Configuraci√≥n y Admin (4 HU): HU-021 a HU-024"
echo -e "   ‚Ä¢ üîå Integraci√≥n y APIs (4 HU): HU-025 a HU-028"
echo -e "   ‚Ä¢ üîê Seguridad y Performance (4 HU): HU-029 a HU-032"

echo ""
echo -e "${YELLOW}üìà Estad√≠sticas del proyecto:${NC}"
echo -e "   ‚Ä¢ ‚úÖ Total historias: 32/32 (100%)"
echo -e "   ‚Ä¢ ‚úÖ Milestones: 6 creados"
echo -e "   ‚Ä¢ ‚úÖ Sprints planificados: 6 (12 semanas)"
echo -e "   ‚Ä¢ ‚úÖ Story points estimados: ~180 puntos"

echo ""
echo -e "${BLUE}üîó Verificar resultados:${NC}"
echo -e "   gh issue list --repo $REPO_OWNER/$REPO_NAME"
echo -e "   https://github.com/$REPO_OWNER/$REPO_NAME/issues"
echo -e "   https://github.com/$REPO_OWNER/$REPO_NAME/milestones"

echo ""
echo -e "${YELLOW}üìã Pr√≥ximos pasos:${NC}"
echo -e "   1. ‚úÖ Crear proyecto GitHub manualmente"
echo -e "   2. ‚úÖ Asignar issues a sprints"
echo -e "   3. ‚úÖ Configurar board Kanban"
echo -e "   4. ‚úÖ Asignar equipo de desarrollo"
echo -e "   5. ‚úÖ Comenzar Sprint 1"

echo ""
echo -e "${GREEN}üöÄ ¬°Proyecto AFIP Monitor MCP completamente planificado!${NC}"